<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: css | Worth Mentioning]]></title>
  <link href="http://blog.riemann.cc/categories/css/atom.xml" rel="self"/>
  <link href="http://blog.riemann.cc/"/>
  <updated>2013-06-19T20:15:46-05:00</updated>
  <id>http://blog.riemann.cc/</id>
  <author>
    <name><![CDATA[Robert Riemann]]></name>
    <email><![CDATA[robert@riemann.cc]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Table Of Contents in Octopress]]></title>
    <link href="http://blog.riemann.cc/2013/04/10/table-of-contents-in-octopress/"/>
    <updated>2013-04-10T09:29:00-05:00</updated>
    <id>http://blog.riemann.cc/2013/04/10/table-of-contents-in-octopress</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#prologue">Prologue</a></li>
  <li><a href="#generating-the-table-of-contents">Generating the Table Of Contents</a>    <ul>
      <li><a href="#using-kramdown">Using Kramdown</a></li>
      <li><a href="#preparing-your-posts">Preparing your posts</a></li>
    </ul>
  </li>
  <li><a href="#styling">Styling</a></li>
  <li><a href="#issues">Issues</a></li>
</ul>

<h3 id="prologue">Prologue</h3>

<p>I’m still looking for an easy and proper solution to implement pictures with
subtitles and an original size pop-up for my blog. On the way I found some
interesting ideas to equip <a href="http://octopress.org/">Octopress</a>, Hacker’s Blog Engine, with a table of
contents.</p>

<p>So I stumbled upon <a href="http://brizzled.clapper.org/blog/2012/02/04/generating-a-table-of-contents-in-octopress/">this article</a> and really wondered about the
complexity of solutions other people found. So I just want to present the
solution that I found.</p>

<!-- more -->

<h3 id="generating-the-table-of-contents">Generating the Table Of Contents</h3>

<p>I’m going to add some further <abbr title="Table Of Contents">TOC</abbr> levels for demonstration purposes. <code>;)</code></p>

<h4 id="using-kramdown">Using Kramdown</h4>

<p>I use <a href="http://kramdown.rubyforge.org">kramdown</a> as Markdown converter in all my projects. The inventor claims,
that it could be the fastest converter so far. Additionally, it comes with some
nice extras. For instance, it can generate a <abbr title="Table Of Contents">TOC</abbr> for you<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>.</p>

<p>To use kramdown within Octopress, you have to activate it in the <code>_config.yml</code> file.</p>

<pre><code>markdown: kramdown
</code></pre>

<h4 id="preparing-your-posts">Preparing your posts</h4>

<p>The following code in your blog posts is replaced by the <abbr title="Table Of Contents">TOC</abbr> after kramdown parsing.</p>

<pre><code>* list element with functor item
{:toc}
</code></pre>

<h3 id="styling">Styling</h3>

<p>I applied the following <a href="http://sass-lang.com/">SCSS</a> code to realize the styling. Octopress already
knows how to generate valid CSS code out of it. The <code>@include shadow-box;</code>
is resolved by <a href="http://compass-style.org/">Compass</a>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Snippet for sass/custom/_styles.scss </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nf">#markdown-toc</span><span class="nd">:before</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">content</span><span class="o">:</span> <span class="err">“</span><span class="n">Table</span> <span class="n">of</span> <span class="n">Contents</span><span class="err">”</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-weight</span><span class="o">:</span> <span class="k">bold</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nt">ul</span><span class="nf">#markdown-toc</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">list-style</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>  <span class="k">float</span><span class="o">:</span> <span class="k">right</span><span class="p">;</span>
</span><span class='line'>  <span class="o">@</span><span class="n">include</span> <span class="n">shadow</span><span class="o">-</span><span class="n">box</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="nb">white</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3 id="issues">Issues</h3>

<p>One problem I came across is that the links of the <abbr title="Table Of Contents">TOC</abbr> are only relative using
HTML anchors. So if only a part of your post is shown, because you made usage of
<code>&lt;!-- more --&gt;</code> and the post is shown in your blog index page, it won’t work.</p>

<p>I decided that I don’t want to show the <abbr title="Table Of Contents">TOC</abbr> in this case at all and added
additionally the following lines to my style description.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.blog-index</span> <span class="nf">#markdown-toc</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">display</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p><a href="http://kramdown.rubyforge.org/converter/html.html#toc">http://kramdown.rubyforge.org/converter/html.html#toc</a><a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Just moved to Jekyll]]></title>
    <link href="http://blog.riemann.cc/2010/01/31/just_moved_to_jekyll/"/>
    <updated>2010-01-31T00:00:00-05:00</updated>
    <id>http://blog.riemann.cc/2010/01/31/just_moved_to_jekyll</id>
    <content type="html"><![CDATA[<h2 id="static-website-generators">Static Website Generators</h2>

<p>After using the static website generator <a href="http://webgen.rubyforge.org/">webgen</a> I started to appreciate the idea not
to depend on special hosts with php, mysql and so on enabled. You can put all files on a CD
and it will works nevertheless. Like in the good old days, when there was only the notepad and
the Netscape Navigator.</p>

<p>My last blog was powered by <a href="http://www.movabletype.org/">Movable Type</a>. A really good, full-featured engine, but editing in
the ajax backend was damn slow, because I hosted Movable Type myself via a dynamic dns service. And
at home the provided upload rate is not good enough to host a page serious. I don’t want to pay for
websites. There is so much <em>static</em> webspace in the www. So I switched over to the ruby<sup id="fnref:rb"><a href="#fn:rb" rel="footnote">1</a></sup> driven <a href="http://jekyllrb.com/">Jekyll</a>
and got in addtion the hosting for free on <a href="http://github.com">http://github.com</a>.</p>

<h2 id="building-the-blog">Building The Blog</h2>

<p>I started with a copy of <a href="http://github.com/schacon/schacon.github.com">http://github.com/schacon/schacon.github.com</a>. At this point a big “Horay!” to schacon
and open source, that made a quick start possible.</p>

<p>While editing the files I found some usefull tricks you, you maybe googled for.</p>

<h2 id="css-selector-for-elements-without-class-attribute">CSS selector for elements without <code>class</code> attribute</h2>

<p>I wanted a template which allows to use nice CSS formatted <code>&lt;code&gt;</code> and <code>&lt;pre&gt;</code> tags for source code,
but on the other hand I didn’t want to change the style of included code snippets from <a href="http://pastie.org">http://pastie.org</a> or
<a href="http://refactormycode.com">http://refactormycode.com</a>.</p>

<ul id="markdown-toc">
  <li><a href="#static-website-generators">Static Website Generators</a></li>
  <li><a href="#building-the-blog">Building The Blog</a></li>
  <li><a href="#css-selector-for-elements-without-class-attribute">CSS selector for elements without <code>class</code> attribute</a></li>
  <li><a href="#integrating-other-static-pages">Integrating other static pages</a></li>
  <li><a href="#generating-pygments-css-files">Generating pygments CSS files</a></li>
</ul>

<p>So I found out how to change only these html tags in the source code, which doesn’t have an <code>class</code> attribute, because
that is exactly the difference between these pastie-snippets and my own <code>pre</code>-elements.</p>

<p>The solution is to use the <a href="http://www.w3.org/TR/css3-selectors/#negation">negation pseudo-class selector</a>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">pre</span><span class="o">,</span> <span class="nt">code</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">font-family</span><span class="o">:</span><span class="n">Consolas</span><span class="o">,</span><span class="err">”</span><span class="n">Andale</span> <span class="n">Mono</span><span class="err">”</span><span class="o">,</span><span class="err">”</span><span class="n">Courier</span> <span class="n">New</span><span class="err">”</span><span class="o">,</span><span class="n">Courier</span><span class="o">,</span><span class="n">mono</span> <span class="cp">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-weight</span><span class="o">:</span> <span class="m">400</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-size</span><span class="o">:</span><span class="m">0.9em</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;*</span><span class="nd">:not</span><span class="o">(</span><span class="nt">PRE</span><span class="o">)</span> <span class="o">&amp;</span><span class="nt">gt</span><span class="o">;</span> <span class="nt">code</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#333</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="nt">pre</span><span class="nd">:not</span><span class="o">([</span><span class="nt">class</span><span class="o">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#333</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border</span><span class="o">:</span> <span class="m">1px</span> <span class="k">solid</span> <span class="m">#000</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>  <span class="k">margin</span><span class="o">:</span> <span class="m">1em</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">overflow</span><span class="o">:</span> <span class="k">auto</span><span class="p">;</span>
</span><span class='line'>  <span class="k">padding</span><span class="o">:</span> <span class="m">0.5em</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>First I define some basic font styles for all kind of code. After that I define styles for the code, which isn’t
in a <code>pre</code>-element and at last follows the style for the pygments-generated in-built code.</p>

<h2 id="integrating-other-static-pages">Integrating other static pages</h2>

<p>As BSc physics student I got a userpage on the IT system of the physics institute, where I store some files.
Furthermore I have an account at <a href="http://desy.de">DESY</a>, from where I also get a userpage. So I thought it would
be nice to integrate both pages.</p>

<p>In the end I got it by defining a special header and footer in the .htaccess file for the Apache auto-generated directory index.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>.htaccess </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="nb">ReadmeName</span> footer.html
</span><span class='line'><span class="nb">HeaderName</span> header.html
</span><span class='line'><span class="nb">IndexStyleSheet</span> style.css
</span><span class='line'><span class="nb">IndexIgnore</span> style.css footer.html header.html
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>More explanation are on the <a href="http://httpd.apache.org/docs/2.2/mod/mod_autoindex.html">official Apache Module page</a> given.</p>

<p>You might also want to look in my <a href="http://github.com/saLOUt/salout.github.com">blog sources</a>, where you can find <a href="http://github.com/saLOUt/salout.github.com/tree/master/other_pages_integration/">these
files</a> in the “other_page_integration” folder.</p>

<h2 id="generating-pygments-css-files">Generating pygments CSS files</h2>

<p>I didn’t found it immediately in the internet, so I want to increase the pages containting the hint by 1.</p>

<p>If you want to create the CSS file, maybe with the look and feel of <a href="http://pastie.org">http://pastie.org</a>, try this in your <abbr title="command line, or console. On Linux i.e. bash.">cmd</abbr> to
generate a complete “highlight.css”.</p>

<pre><code>pygmentize -f html -a .highlight -S pastie &gt; highlight.css
</code></pre>

<p>To get an overview over possible you have to execute this command:</p>

<pre><code>pygmentize -L styles
</code></pre>

<p>Syntax highlighting is done via <a href="http://pygments.org/">pygments</a>, which bases on python. Is that really necessary?</p>
<div class="footnotes">
  <ol>
    <li id="fn:rb">
      <p><a href="http://www.ruby-lang.org">Ruby</a> is the best language I ever saw. So the new system had to be based on it.<a href="#fnref:rb" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>
