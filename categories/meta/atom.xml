<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: meta | Worth Mentioning]]></title>
  <link href="http://blog.riemann.cc/categories/meta/atom.xml" rel="self"/>
  <link href="http://blog.riemann.cc/"/>
  <updated>2013-07-11T00:13:02-06:00</updated>
  <id>http://blog.riemann.cc/</id>
  <author>
    <name><![CDATA[Robert Riemann]]></name>
    <email><![CDATA[robert@riemann.cc]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Zur Allgemeinen Lage der Sicherheit]]></title>
    <link href="http://blog.riemann.cc/2013/07/06/zur-allgemeinen-lage-der-sicherheit/"/>
    <updated>2013-07-06T21:07:00-06:00</updated>
    <id>http://blog.riemann.cc/2013/07/06/zur-allgemeinen-lage-der-sicherheit</id>
    <content type="html"><![CDATA[<p><a href="http://www.gnupg.org/" title="Gnu GPG"><img src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/61/Gnupg_logo.svg/200px-Gnupg_logo.svg.png" alt="GnuPG Logo" class="right" /></a> Nachdem einmal mehr aufgezeigt wurde (<a href="http://de.wikipedia.org/wiki/PRISM_%28%C3%9Cberwachungsprogramm%29" title="Prism (Überwachungsprogramm) auf Wikipedia">Prism</a>, <a href="http://de.wikipedia.org/wiki/Tempora" title="Tempora auf Wikipedia">Tempora</a>), wie
transparent man doch im Internet ist, sind Themen wie Datensparsamkeit, Datenschutz
und Kryptographie wieder prominent in den Medien vertreten.</p>

<p>Eine kurze Link-Sammlung zu Verschlüsselungstechniken für jedermann.</p>

<!-- more -->

<p>Worum es bei der Bespitzelung geht und wie man sich dagegen wehren kann,
beschreibt <em>Ludwig Greven</em> in seinem Artikel
<a href="http://www.zeit.de/digital/datenschutz/2013-06/ueberwachung-snowden-datensparsamkeit">Datensparsamkeit: Wer nicht belauscht werden will, sollte nicht überall reden</a>.
Ich zitiere:</p>

<blockquote>
  <p>Was technisch möglich ist, wird von staatlichen Kontrolleuren auch gemacht.</p>
</blockquote>

<blockquote>
  <p>Verschlüsselungsprogramme oder andere Verfahren, um seine Spuren im Internet zu verwischen, können zwar etwas helfen. Doch wer so etwas nutzt, <a href="http://www.zeit.de/digital/datenschutz/2013-06/nsa-speichert-verschluesselte-mails">macht die Überwacher erst recht scharf und sich verdächtig</a> – verschlüsselte Kommunikation wird von ihnen grundsätzlich gespeichert, denn vielleicht kann man sie ja später knacken.</p>
</blockquote>

<p>Das sind erst einmal Tatsachen, die wir hinnehmen müssen. Selbst wenn es nicht
unserer Regierungen wären, die hier die Daten abschnorcheln, so muss man davon
ausgehen, dass es vielleicht jemand anderes probiert.</p>

<p>Noch am selben Tag kontert <em>David Hugendick</em> mit 
<a href="http://www.zeit.de/kultur/2013-06/replik-datensparsamkeit-prism">Datenschutz: Wir lassen uns nicht verschlüsseln</a>.
Er formuliert unter anderem:</p>

<blockquote>
  <p>Wir könnten unsererseits aufrüsten, verschlüsseln, die Möglichkeiten wären da. Doch wohin führte uns diese Logik? Sollen wir uns damit abfinden, dass wir überwacht werden, weil wir ja kryptografisch aufgemöbelte Mails schicken können? Sollen wir fürderhin wieder so reden und schreiben, wie es Schriftsteller zu Sowjetzeiten tun mussten, in Codes und Uneigentlichkeiten, hier und da mal ein subtiler Gruß an den Geheimdienst?</p>
</blockquote>

<p>Ich finde es ja stets löblich, wenn ein Medium einen Sachverhalt von zwei verschiedenen
Blickwinkeln betrachtet. In diesem Fall muss ich dem Herrn Hugendick ganz klar
widersprechen. Ja – wir müssen verschlüsseln.</p>

<p>Die vielleicht nicht anwenderfreundlichste, aber zumindest konsequenteste Lösung
nach der Datensparsamkeit kann nur sein einfach jegliche Kommunikation zu
verschlüsseln – und sei sie auch noch so belanglos. So würden die Kapazitäten der
Auswertungszentren überlastet werden und eine Entschlüsselung im speziellen
Einzelfall sehr unwahrscheinlich.</p>

<p>Ich kann also nur empfehlen sich die notwendigen kostenlosen Programme zu installieren.
An aktuellen Anleitungen dürfte es momentan im Netz nicht fehlen:</p>

<ul>
  <li>Immer darauf achten mit <code>https</code> anstatt <code>http</code> zu surfen, wenn möglich. Facebook macht das ganz richtig. Das hilft natürlich wenig, wenn Facebook im Anschluss die Daten freiwillig offenlegt.</li>
  <li>Mail-Verschlüsselung
    <ul>
      <li>Artikel technischer Natur: <a href="http://www.thunderbird-mail.de/wiki/Enigmail_OpenPGP">http://www.thunderbird-mail.de/wiki/Enigmail_OpenPGP</a></li>
      <li>Youtube-Demonstration Schritt-für-Schritt: <a href="http://www.youtube.com/watch?v=drWdLiU3oIA">http://www.youtube.com/watch?v=drWdLiU3oIA</a></li>
    </ul>
  </li>
  <li>Verschlüsseltes Chatten (auch mit Facebook-Freunden)
    <ul>
      <li>für Mac OS: <a href="http://www.adium.im/">Adium</a></li>
      <li>Linux-Nuter wissen sich selber zu helfen. <code>;)</code> (Kopete oder Pidgin)</li>
      <li>für Windows: hm, schwierig. Lieber zu Linux oder Mac wechseln. <a href="http://de.wikipedia.org/wiki/Off-the-Record_Messaging#Verf.C3.BCgbarkeit">Wikipedia</a> weiß mehr.</li>
    </ul>
  </li>
</ul>

<p>Das wäre dann schon erstmal ein guter Anfang.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[25 Jahre Robert: Aufbruch zu Neuem]]></title>
    <link href="http://blog.riemann.cc/2013/06/06/25-jahre-robert-aufbruch-zu-neuem/"/>
    <updated>2013-06-06T19:29:00-06:00</updated>
    <id>http://blog.riemann.cc/2013/06/06/25-jahre-robert-aufbruch-zu-neuem</id>
    <content type="html"><![CDATA[<p><figure class="right"><a href="/images/central-america/southernmost-point-key-west.jpg" title="Südspitze der USA"><img src="/images/central-america/southernmost-point-key-west.jpg" title="Südspitze der USA" ></a><figcaption>Südspitze der USA</figcaption></figure></p>

<p>Ich sitze im Bus und bin auf der Route 1 von Meile 0 (Key West) unterwegs
zurück nach Miami Beach. Gerade haben wir Meile 69 passiert. Heute ist mein
25. Geburtstag.</p>

<p>Sicherlich werde ich mich noch lange an heute erinnern können, wenn auch nicht
unbedingt der Feierlichkeiten wegen.</p>

<!-- more -->

<p>Diese fallen wohl dieses Jahr ins Wasser (Es regnet tatsächlich ständig. Das
Tief hat auch nein Namen: Andrea). Bislang habe ich meinen Geburtstag im Stillen
gefeiert, da es mir irgendwie zu doof war meinen Couchsurfing-Hosts davon zu
erzählen. Ich habe die vergangene Nacht auf deren Segelboot außerhalb des Hafens
verbracht. Die Gastgeber waren allerdings mehr mit sich und ihrem Kumpel beschäftigt,
der ebenfalls heute Geburtstag feiert. Wir alle waren am Abend ziemlich müde und
haben eine stürmische Nacht mit wenig Schlaf erwartet – das hat die Stimmung etwas
gesengt.</p>

<p><figure class="left"><a href="/images/central-america/pancakes.jpg" title="Meine Pancakes mit heißem Ahornsirup"><img src="/images/central-america/pancakes.jpg" title="Meine Pancakes mit heißem Ahornsirup" ></a><figcaption>Meine Pancakes mit heißem Ahornsirup</figcaption></figure></p>

<p>Die Wettervorhersage hat sich zum Glück als falsch herausgestellt und es hat sich
am Morgen sogar das erste mal seit meiner Einreise in die USA kurz die Sonne gezeigt.
Ich habe mich (wie so häufig) selbst ins Restaurant eingeladen und Pancakes
mit Ahornsirup und Butter zum Frühstück ausprobiert – echt amerikanisch. Ich ziehe dann aber
doch die heimischen Quarkkeulchen oder die französischen Crêpes vor. Da wären wir
auch gleich schon beim Thema.</p>

<p>Im Restaurant gibt es WLAN. Ich lese ein paar erste Mails. Darunter finde ich die
Mail des Professors aus Marseille meines favorisierten Doktorarbeit-Themas:</p>

<blockquote>
  <p>We have the great pleasure to inform you that you will get a PhD scholarship,
although the final and official decision will be taken on June 24th.</p>
</blockquote>

<p>Bis hierhin war es schon ein langer, umständlicher Weg. Schön, dass es nun endlich
Fahrt aufnimmt.
Die Entscheidung liegt nun bei Gremien hierarchisch oberhalb der Graduate School,
so wie ich das verstanden habe. Wir sind alle zuversichtlich und warten ab. Zum
Glück wird mir hier die Zeit nicht lang.</p>

<p>Das angepeilte Thema liest sich folgendermaßen:</p>

<blockquote>
  <p>Interaction fluide-structure: <br />
modélisation d’objets flexibles</p>
</blockquote>

<blockquote>
  <p>Fluid Structure Interaction:<br />
enumerical modeling of flexible objects in viscous flow</p>
</blockquote>

<blockquote>
  <p>Numerische Modelierung der Interaktion zwischen flexiblen Objekten und Gasen/Flüssigkeiten</p>
</blockquote>

<p>Als Beispiele sind Insekten in Luft oder Fische im Wasser angeführt. Das ist doch
einmal wirklich Physik zum Anfassen/Begreifen!</p>

<p>Darüberhinaus habe ich endlich die Scans meines Masterstudiumzeugnisses zugeschickt
bekommen. Da bis zuletzt noch ein Gutachten fehlte, habe ich auf diesen Moment
bis heute warten müssen. Insgesamt wurde das Masterstudium wie mein Bachelorstudium
benotet und damit besser, als ich es theoretisch für möglich gehalten hätte.
Scheinbar ermöglicht der erfolgreiche Abschluss eines Masterstudiums einem nicht
das diffiziele Punktesystem zu durchschauen. Wie auch immer: Ich habe es jetzt
auch ganz offiziell geschafft.</p>

<p>Wenn auch beides absehbar war, habe ich mich dennoch sehr gefreut. Die Crêpes
zum Frühstück rücken in Reichweite. Irgendwie doch etwas feierlich heute.</p>

<p>Zum Geburtstag habe ich mir den E-Book-Reader Kindle Paperwhite bei Amazon USA
bestellt. Beim Kauf in den USA spare ich etwas. Der ist zum Lesen auf Reisen
bestimmt superpraktisch und vielleicht auch im späteren Studium.</p>

<p>Wenn mich der Bus-Shuttle nachher direkt vor dem Miami Beach International
Hostel auskippt, werde ich erstmal meine weiteren Mails lesen und dann
vielleicht noch das erste mal in den USA tanzen gehen. Mein Geburtstag ist,
zumindest hier in Miami Beach, schließlich noch nicht vorbei.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Table Of Contents in Octopress]]></title>
    <link href="http://blog.riemann.cc/2013/04/10/table-of-contents-in-octopress/"/>
    <updated>2013-04-10T09:29:00-06:00</updated>
    <id>http://blog.riemann.cc/2013/04/10/table-of-contents-in-octopress</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#prologue">Prologue</a></li>
  <li><a href="#generating-the-table-of-contents">Generating the Table Of Contents</a>    <ul>
      <li><a href="#using-kramdown">Using Kramdown</a></li>
      <li><a href="#preparing-your-posts">Preparing your posts</a></li>
    </ul>
  </li>
  <li><a href="#styling">Styling</a></li>
  <li><a href="#issues">Issues</a></li>
</ul>

<h3 id="prologue">Prologue</h3>

<p>I’m still looking for an easy and proper solution to implement pictures with
subtitles and an original size pop-up for my blog. On the way I found some
interesting ideas to equip <a href="http://octopress.org/">Octopress</a>, Hacker’s Blog Engine, with a table of
contents.</p>

<p>So I stumbled upon <a href="http://brizzled.clapper.org/blog/2012/02/04/generating-a-table-of-contents-in-octopress/">this article</a> and really wondered about the
complexity of solutions other people found. So I just want to present the
solution that I found.</p>

<!-- more -->

<h3 id="generating-the-table-of-contents">Generating the Table Of Contents</h3>

<p>I’m going to add some further <abbr title="Table Of Contents">TOC</abbr> levels for demonstration purposes. <code>;)</code></p>

<h4 id="using-kramdown">Using Kramdown</h4>

<p>I use <a href="http://kramdown.rubyforge.org">kramdown</a> as Markdown converter in all my projects. The inventor claims,
that it could be the fastest converter so far. Additionally, it comes with some
nice extras. For instance, it can generate a <abbr title="Table Of Contents">TOC</abbr> for you<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>.</p>

<p>To use kramdown within Octopress, you have to activate it in the <code>_config.yml</code> file.</p>

<pre><code>markdown: kramdown
</code></pre>

<h4 id="preparing-your-posts">Preparing your posts</h4>

<p>The following code in your blog posts is replaced by the <abbr title="Table Of Contents">TOC</abbr> after kramdown parsing.</p>

<pre><code>* list element with functor item
{:toc}
</code></pre>

<h3 id="styling">Styling</h3>

<p>I applied the following <a href="http://sass-lang.com/">SCSS</a> code to realize the styling. Octopress already
knows how to generate valid CSS code out of it. The <code>@include shadow-box;</code>
is resolved by <a href="http://compass-style.org/">Compass</a>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Snippet for sass/custom/_styles.scss </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nf">#markdown-toc</span><span class="nd">:before</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">content</span><span class="o">:</span> <span class="err">“</span><span class="n">Table</span> <span class="n">of</span> <span class="n">Contents</span><span class="err">”</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-weight</span><span class="o">:</span> <span class="k">bold</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nt">ul</span><span class="nf">#markdown-toc</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">list-style</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>  <span class="k">float</span><span class="o">:</span> <span class="k">right</span><span class="p">;</span>
</span><span class='line'>  <span class="o">@</span><span class="n">include</span> <span class="n">shadow</span><span class="o">-</span><span class="n">box</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="nb">white</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3 id="issues">Issues</h3>

<p>One problem I came across is that the links of the <abbr title="Table Of Contents">TOC</abbr> are only relative using
HTML anchors. So if only a part of your post is shown, because you made usage of
<code>&lt;!-- more --&gt;</code> and the post is shown in your blog index page, it won’t work.</p>

<p>I decided that I don’t want to show the <abbr title="Table Of Contents">TOC</abbr> in this case at all and added
additionally the following lines to my style description.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.blog-index</span> <span class="nf">#markdown-toc</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">display</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p><a href="http://kramdown.rubyforge.org/converter/html.html#toc">http://kramdown.rubyforge.org/converter/html.html#toc</a><a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Patching Ruby Gem GSL]]></title>
    <link href="http://blog.riemann.cc/2013/01/05/patching-ruby-gsl/"/>
    <updated>2013-01-05T14:21:00-06:00</updated>
    <id>http://blog.riemann.cc/2013/01/05/patching-ruby-gsl</id>
    <content type="html"><![CDATA[<p>The <a href="http://gist.github.com/">Github Gist</a> code pasting service received
some updates, which breaks the layout of the embedding tags used by this blogging
engine octopress (<a href="http://github.com/imathis/octopress/issues/847">Issue #847</a>).</p>

<p>This issue was already fixed and got included in the development branch 2.1.
I decided to upgrade my blog to the latest development version. Afterwards the
Ruby version manager <a href="http://rvm.io/">rvm</a> asked to install a new ruby version.
To meet the exact requirements of octopress I decided to give it a run, but when
installing the required gems using <code>bundle install</code> I wasn’t able to
install <a href="http://rb-gsl.rubyforge.org/">gsl</a>, the ruby binding to the GNU
scientific library, which is used to speed-up the “related posts” calculation.
I remembered to run into this problem once before. Unfortunately it isn’t
resolved yet. <code>:(</code></p>

<pre><code>vector_complex.c:1989:12: error: conflicting types for 'gsl_vector_complex_equal'
/usr/include/gsl/gsl_vector_complex_double.h:167:5: note: previous declaration of 'gsl_vector_complex_equal' was here
make: *** [vector_complex.o] Error 1
</code></pre>

<!-- more -->

<h3 id="solution">Solution</h3>

<p>To get this gem installed nevertheless, you have to patch the sources of the
native extension. For this, you have to find the building directory <code>ext</code>, which
should be mentioned in the error message.</p>

<p>Put the patch <code>rb-gsl.patch</code> from below in this directory or download it using</p>

<pre><code>wget 'https://gist.github.com/raw/2296214/c6b1c7150713da5d2640ddc799132611ac72cef4/rb-gsl.patch'
</code></pre>

<p>Then you have to apply the patch using <code>patch -p2 &lt; rb-gsl.patch</code> from within the
<code>ext</code> directory. To build the extension finally, you have to run the command
<code>make -j4</code>. If you proceed with bundle install again, the source code will be unzipped
again leaving you with same unpatched code as before. To work around this issue,
a hint is given in the help of the gem install commmand (<code>gem install --help</code>).</p>

<pre><code>If you correct the compilation errors by editing the gem files you will need
    to write the specification by hand.  For example:

      $ gem install some_extension_gem
      [build fails]
      Gem files will remain installed in \
      /path/to/gems/some_extension_gem-1.0 for inspection.
      Results logged to /path/to/gems/some_extension_gem-1.0/gem_make.out
      $ [cd /path/to/gems/some_extension_gem-1.0]
      $ [edit files or what-have-you and run make]
      $ gem spec ../../cache/some_extension_gem-1.0.gem --ruby &gt; \
                ../../specifications/some_extension_gem-1.0.gemspec
      $ gem list some_extension_gem
</code></pre>

<p>So I just did as I got told (still in <code>exe</code> directory):</p>

<pre><code> gem spec ../../../cache/gsl-1.14.7.gem --ruby &gt; ../../../specifications/gsl-1.14.7.gemspec
</code></pre>

<p>Afterwards <code>bundle install</code> will accept this gem. That’s it!</p>

<h3 id="patch-rb-gslpatch">Patch rb-gsl.patch</h3>

<p><div><script src='https://gist.github.com/2296214.js?file=rb-gsl.patch'></script>
<noscript><pre><code>diff --git a/ext/matrix_complex.c b/ext/matrix_complex.c
index 8a77ac1..1b1d8af 100644
--- a/ext/matrix_complex.c
+++ b/ext/matrix_complex.c
@@ -1519,8 +1519,7 @@ static VALUE rb_gsl_matrix_complex_indgen_singleton(int argc, VALUE *argv, VALUE
   return Data_Wrap_Struct(cgsl_matrix_complex, 0, gsl_matrix_complex_free, mnew);
 }
 
-
-static int gsl_matrix_complex_equal(const gsl_matrix_complex *m1,
+static int gsl_matrix_complex_equal_witg_eps(const gsl_matrix_complex *m1,
   const gsl_matrix_complex *m2, double eps)
 {
   gsl_complex z1, z2;
@@ -1537,6 +1536,7 @@ static int gsl_matrix_complex_equal(const gsl_matrix_complex *m1,
   return 1;
 }
 
+
 static VALUE rb_gsl_matrix_complex_equal(int argc, VALUE *argv, VALUE obj)
 {
   gsl_matrix_complex *m1, *m2;
@@ -1555,7 +1555,7 @@ static VALUE rb_gsl_matrix_complex_equal(int argc, VALUE *argv, VALUE obj)
   Data_Get_Struct(obj, gsl_matrix_complex, m1);
   CHECK_MATRIX_COMPLEX(argv[0]);
   Data_Get_Struct(argv[0], gsl_matrix_complex, m2);
-  ret = gsl_matrix_complex_equal(m1, m2, eps);
+  ret = gsl_matrix_complex_equal_witg_eps(m1, m2, eps);
   if (ret == 1) return Qtrue;
   else return Qfalse;
 }
diff --git a/ext/vector_complex.c b/ext/vector_complex.c
index f9a84f0..2711a36 100644
--- a/ext/vector_complex.c
+++ b/ext/vector_complex.c
@@ -1986,7 +1986,7 @@ static VALUE rb_gsl_vector_complex_zip(int argc, VALUE *argv, VALUE obj)
   return ary;
 }
 
-static int gsl_vector_complex_equal(const gsl_vector_complex *v1,
+static int gsl_vector_complex_equal_with_eps(const gsl_vector_complex *v1,
   const gsl_vector_complex *v2, double eps)
 {
   gsl_complex z1, z2;
@@ -2019,7 +2019,7 @@ static VALUE rb_gsl_vector_complex_equal(int argc, VALUE *argv, VALUE obj)
   Data_Get_Struct(obj, gsl_vector_complex, v1);
   CHECK_VECTOR_COMPLEX(argv[0]);
   Data_Get_Struct(argv[0], gsl_vector_complex, v2);
-  ret = gsl_vector_complex_equal(v1, v2, eps);
+  ret = gsl_vector_complex_equal_with_eps(v1, v2, eps);
   if (ret == 1) return Qtrue;
   else return Qfalse;
 }</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Just moved to Jekyll]]></title>
    <link href="http://blog.riemann.cc/2010/01/31/just_moved_to_jekyll/"/>
    <updated>2010-01-31T00:00:00-06:00</updated>
    <id>http://blog.riemann.cc/2010/01/31/just_moved_to_jekyll</id>
    <content type="html"><![CDATA[<h2 id="static-website-generators">Static Website Generators</h2>

<p>After using the static website generator <a href="http://webgen.rubyforge.org/">webgen</a> I started to appreciate the idea not
to depend on special hosts with php, mysql and so on enabled. You can put all files on a CD
and it will works nevertheless. Like in the good old days, when there was only the notepad and
the Netscape Navigator.</p>

<p>My last blog was powered by <a href="http://www.movabletype.org/">Movable Type</a>. A really good, full-featured engine, but editing in
the ajax backend was damn slow, because I hosted Movable Type myself via a dynamic dns service. And
at home the provided upload rate is not good enough to host a page serious. I don’t want to pay for
websites. There is so much <em>static</em> webspace in the www. So I switched over to the ruby<sup id="fnref:rb"><a href="#fn:rb" rel="footnote">1</a></sup> driven <a href="http://jekyllrb.com/">Jekyll</a>
and got in addtion the hosting for free on <a href="http://github.com">http://github.com</a>.</p>

<h2 id="building-the-blog">Building The Blog</h2>

<p>I started with a copy of <a href="http://github.com/schacon/schacon.github.com">http://github.com/schacon/schacon.github.com</a>. At this point a big “Horay!” to schacon
and open source, that made a quick start possible.</p>

<p>While editing the files I found some usefull tricks you, you maybe googled for.</p>

<h2 id="css-selector-for-elements-without-class-attribute">CSS selector for elements without <code>class</code> attribute</h2>

<p>I wanted a template which allows to use nice CSS formatted <code>&lt;code&gt;</code> and <code>&lt;pre&gt;</code> tags for source code,
but on the other hand I didn’t want to change the style of included code snippets from <a href="http://pastie.org">http://pastie.org</a> or
<a href="http://refactormycode.com">http://refactormycode.com</a>.</p>

<ul id="markdown-toc">
  <li><a href="#static-website-generators">Static Website Generators</a></li>
  <li><a href="#building-the-blog">Building The Blog</a></li>
  <li><a href="#css-selector-for-elements-without-class-attribute">CSS selector for elements without <code>class</code> attribute</a></li>
  <li><a href="#integrating-other-static-pages">Integrating other static pages</a></li>
  <li><a href="#generating-pygments-css-files">Generating pygments CSS files</a></li>
</ul>

<p>So I found out how to change only these html tags in the source code, which doesn’t have an <code>class</code> attribute, because
that is exactly the difference between these pastie-snippets and my own <code>pre</code>-elements.</p>

<p>The solution is to use the <a href="http://www.w3.org/TR/css3-selectors/#negation">negation pseudo-class selector</a>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">pre</span><span class="o">,</span> <span class="nt">code</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">font-family</span><span class="o">:</span><span class="n">Consolas</span><span class="o">,</span><span class="err">”</span><span class="n">Andale</span> <span class="n">Mono</span><span class="err">”</span><span class="o">,</span><span class="err">”</span><span class="n">Courier</span> <span class="n">New</span><span class="err">”</span><span class="o">,</span><span class="n">Courier</span><span class="o">,</span><span class="n">mono</span> <span class="cp">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-weight</span><span class="o">:</span> <span class="m">400</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-size</span><span class="o">:</span><span class="m">0.9em</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;*</span><span class="nd">:not</span><span class="o">(</span><span class="nt">PRE</span><span class="o">)</span> <span class="o">&amp;</span><span class="nt">gt</span><span class="o">;</span> <span class="nt">code</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#333</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="nt">pre</span><span class="nd">:not</span><span class="o">([</span><span class="nt">class</span><span class="o">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#333</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border</span><span class="o">:</span> <span class="m">1px</span> <span class="k">solid</span> <span class="m">#000</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>  <span class="k">margin</span><span class="o">:</span> <span class="m">1em</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">overflow</span><span class="o">:</span> <span class="k">auto</span><span class="p">;</span>
</span><span class='line'>  <span class="k">padding</span><span class="o">:</span> <span class="m">0.5em</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>First I define some basic font styles for all kind of code. After that I define styles for the code, which isn’t
in a <code>pre</code>-element and at last follows the style for the pygments-generated in-built code.</p>

<h2 id="integrating-other-static-pages">Integrating other static pages</h2>

<p>As BSc physics student I got a userpage on the IT system of the physics institute, where I store some files.
Furthermore I have an account at <a href="http://desy.de">DESY</a>, from where I also get a userpage. So I thought it would
be nice to integrate both pages.</p>

<p>In the end I got it by defining a special header and footer in the .htaccess file for the Apache auto-generated directory index.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>.htaccess </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="nb">ReadmeName</span> footer.html
</span><span class='line'><span class="nb">HeaderName</span> header.html
</span><span class='line'><span class="nb">IndexStyleSheet</span> style.css
</span><span class='line'><span class="nb">IndexIgnore</span> style.css footer.html header.html
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>More explanation are on the <a href="http://httpd.apache.org/docs/2.2/mod/mod_autoindex.html">official Apache Module page</a> given.</p>

<p>You might also want to look in my <a href="http://github.com/saLOUt/salout.github.com">blog sources</a>, where you can find <a href="http://github.com/saLOUt/salout.github.com/tree/master/other_pages_integration/">these
files</a> in the “other_page_integration” folder.</p>

<h2 id="generating-pygments-css-files">Generating pygments CSS files</h2>

<p>I didn’t found it immediately in the internet, so I want to increase the pages containting the hint by 1.</p>

<p>If you want to create the CSS file, maybe with the look and feel of <a href="http://pastie.org">http://pastie.org</a>, try this in your <abbr title="command line, or console. On Linux i.e. bash.">cmd</abbr> to
generate a complete “highlight.css”.</p>

<pre><code>pygmentize -f html -a .highlight -S pastie &gt; highlight.css
</code></pre>

<p>To get an overview over possible you have to execute this command:</p>

<pre><code>pygmentize -L styles
</code></pre>

<p>Syntax highlighting is done via <a href="http://pygments.org/">pygments</a>, which bases on python. Is that really necessary?</p>
<div class="footnotes">
  <ol>
    <li id="fn:rb">
      <p><a href="http://www.ruby-lang.org">Ruby</a> is the best language I ever saw. So the new system had to be based on it.<a href="#fnref:rb" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>
